//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace MedicalCare.times {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TimeSoap", Namespace="http://tempuri.org/")]
    public partial class Time : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDatabaseInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDatabaseUtcTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRemoteTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerLocalTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerUtcTimeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Time() {
            this.Url = global::MedicalCare.Properties.Settings.Default.MedicalCare_times_Time;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDatabaseInfoCompletedEventHandler GetDatabaseInfoCompleted;
        
        /// <remarks/>
        public event GetDatabaseUtcTimeCompletedEventHandler GetDatabaseUtcTimeCompleted;
        
        /// <remarks/>
        public event GetRemoteTimeCompletedEventHandler GetRemoteTimeCompleted;
        
        /// <remarks/>
        public event GetServerLocalTimeCompletedEventHandler GetServerLocalTimeCompleted;
        
        /// <remarks/>
        public event GetServerUtcTimeCompletedEventHandler GetServerUtcTimeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDatabaseInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDatabaseInfo() {
            object[] results = this.Invoke("GetDatabaseInfo", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDatabaseInfoAsync() {
            this.GetDatabaseInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetDatabaseInfoAsync(object userState) {
            if ((this.GetDatabaseInfoOperationCompleted == null)) {
                this.GetDatabaseInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDatabaseInfoOperationCompleted);
            }
            this.InvokeAsync("GetDatabaseInfo", new object[0], this.GetDatabaseInfoOperationCompleted, userState);
        }
        
        private void OnGetDatabaseInfoOperationCompleted(object arg) {
            if ((this.GetDatabaseInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDatabaseInfoCompleted(this, new GetDatabaseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDatabaseUtcTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetDatabaseUtcTime() {
            object[] results = this.Invoke("GetDatabaseUtcTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetDatabaseUtcTimeAsync() {
            this.GetDatabaseUtcTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetDatabaseUtcTimeAsync(object userState) {
            if ((this.GetDatabaseUtcTimeOperationCompleted == null)) {
                this.GetDatabaseUtcTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDatabaseUtcTimeOperationCompleted);
            }
            this.InvokeAsync("GetDatabaseUtcTime", new object[0], this.GetDatabaseUtcTimeOperationCompleted, userState);
        }
        
        private void OnGetDatabaseUtcTimeOperationCompleted(object arg) {
            if ((this.GetDatabaseUtcTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDatabaseUtcTimeCompleted(this, new GetDatabaseUtcTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRemoteTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRemoteTime() {
            object[] results = this.Invoke("GetRemoteTime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRemoteTimeAsync() {
            this.GetRemoteTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetRemoteTimeAsync(object userState) {
            if ((this.GetRemoteTimeOperationCompleted == null)) {
                this.GetRemoteTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRemoteTimeOperationCompleted);
            }
            this.InvokeAsync("GetRemoteTime", new object[0], this.GetRemoteTimeOperationCompleted, userState);
        }
        
        private void OnGetRemoteTimeOperationCompleted(object arg) {
            if ((this.GetRemoteTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRemoteTimeCompleted(this, new GetRemoteTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServerLocalTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetServerLocalTime() {
            object[] results = this.Invoke("GetServerLocalTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerLocalTimeAsync() {
            this.GetServerLocalTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetServerLocalTimeAsync(object userState) {
            if ((this.GetServerLocalTimeOperationCompleted == null)) {
                this.GetServerLocalTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerLocalTimeOperationCompleted);
            }
            this.InvokeAsync("GetServerLocalTime", new object[0], this.GetServerLocalTimeOperationCompleted, userState);
        }
        
        private void OnGetServerLocalTimeOperationCompleted(object arg) {
            if ((this.GetServerLocalTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerLocalTimeCompleted(this, new GetServerLocalTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServerUtcTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetServerUtcTime() {
            object[] results = this.Invoke("GetServerUtcTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerUtcTimeAsync() {
            this.GetServerUtcTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetServerUtcTimeAsync(object userState) {
            if ((this.GetServerUtcTimeOperationCompleted == null)) {
                this.GetServerUtcTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerUtcTimeOperationCompleted);
            }
            this.InvokeAsync("GetServerUtcTime", new object[0], this.GetServerUtcTimeOperationCompleted, userState);
        }
        
        private void OnGetServerUtcTimeOperationCompleted(object arg) {
            if ((this.GetServerUtcTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerUtcTimeCompleted(this, new GetServerUtcTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDatabaseInfoCompletedEventHandler(object sender, GetDatabaseInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDatabaseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDatabaseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDatabaseUtcTimeCompletedEventHandler(object sender, GetDatabaseUtcTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDatabaseUtcTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDatabaseUtcTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRemoteTimeCompletedEventHandler(object sender, GetRemoteTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRemoteTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRemoteTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetServerLocalTimeCompletedEventHandler(object sender, GetServerLocalTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerLocalTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerLocalTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetServerUtcTimeCompletedEventHandler(object sender, GetServerUtcTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerUtcTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerUtcTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591